#### LAYOUT & NOTES #######################################################################
# For Parsed Documents: keep type and add parsed to end ex: syslog.info.<type>.parsed
# * matches a single tag part.
# ** matches zero or more tag parts.
# Fluentd tries to match tags in the order that they appear in the config file.
# Can't use test.**.test.** will lock up and wont work
#
#
#
#
###########################################################################################

####################
###### SOURCES #####
####################

<source>
  @type syslog
  port 514
  bind 0.0.0.0
  tag raw.syslog
  include_source_host true
  format none
</source>

#####################
##### MANIPULATE ####
#####################

#### Add Server Received Time to Records
<filter raw.syslog.**>
  @type record_modifier
  <record>
    syslog_server_received_time ${Time.at(time).to_s}
  </record>
</filter>

######################################
### Match Syslog Severity & Types ####
### And Classify for Additional ######
### Processing #######################
######################################

#### Emergency Syslog Severity 0
<match raw.syslog.*.emerg.**>
  type rewrite_tag_filter
  rewriterule1 message .+ raw.syslog.emerg.unmatched
</match>

#### Alert Syslog Severity 1
<match raw.syslog.**.alert.**>
  type rewrite_tag_filter
  rewriterule1 message .+ raw.syslog.alert.unmatched
</match>

#### Critical Syslog Severity 2
<match raw.syslog.*.crit.**>
  type rewrite_tag_filter
  rewriterule1 message ^.*PORT_SECURITY-2-PSECURE_VIOLATION.*Security.*address.*0000\.0000\.0000.*$ raw.cisco.crit.portsecuritybogus # Classify Security Violations with No MAC
  rewriterule2 message ^.*PORT_SECURITY-2-PSECURE_VIOLATION.*$ raw.cisco.crit.portsecurity # Classify Other Port Security Violations that Have Macs
  rewriterule3 message .+ raw.syslog.crit.unmatched # Classify everything else as unmatched
</match>

#### Error Syslog Severity 3
<match raw.syslog.*.err.**>
  type rewrite_tag_filter
  rewriterule1 message ^.*%LINK-3-UPDOWN.*$ raw.cisco.err.linkupdown # Classify Cisco UP/Down Messages
  rewriterule2 message .+ raw.syslog.err.unmatched # Classify everything else as unmatched
</match>

#### Warn Syslog Severity 4
<match raw.syslog.*.warn.**>
  type rewrite_tag_filter
  rewriterule1 message ^.*ARP.*0000\.0000\.0000.*$ raw.cisco.warn.arpbogus # Classify bogus ARP Packets
  rewriterule2 message .+ raw.syslog.warn.unmatched # Classify everything else as unmatched
</match>

#### Notice Syslog Severity 5
<match raw.syslog.*.notice.**>
  type rewrite_tag_filter
  rewriterule1 message ^.*SYS-5-CONFIG_I.*$ raw.cisco.notice.configchg # Classify Cisco Config Changes
  rewriterule2 message ^.*EIGRP.*$ raw.cisco.notice.eigrp # Classify Cisco EIGRP Changes
  rewriterule4 message ^.*SYS-5-RELOAD.*$ raw.cisco.notice.reload # Classify Cisco Reloads
  rewriterule5 message ^.*C4K_HWACLMAN-4.*$ raw.cisco.notice.hwacl # Classify Hardware ACL Messages 
  rewriterule6 message ^.*EC-5-BUNDLE.*$ raw.cisco.notice.portchannel # Classify Port Channel Bundling
  rewriterule7 message .+ raw.syslog.notice.unmatched # Classify everything else as unmatched
</match>

#### Info Syslog Severity 6
<match raw.syslog.*.info.**>
	type rewrite_tag_filter
	rewriterule1 message ^.*TAC_PLUS_ACCT:|tac_plus.*$ raw.syslog.info.tacacs # Match TACACS Records
	rewriterule2 message ^.*POWERSUPPLY.*$ raw.cisco.info.powersupply # Match Power Supply Records
	rewriterule3 message ^.*EIGRP.*$ raw.cisco.info.eigrp # EIGRP Messages
	rewriterule4 message ^.*EM-6-LOG.*$ raw.cisco.info.sla # SLA Errors
	rewriterule5 message .+ raw.syslog.info.unmatched # Match everything else not matched and don't alert
</match>

#### Debug Syslog Severity 6
<match raw.syslog.*.debug.**>
	type rewrite_tag_filter
	rewriterule1 message .+ raw.syslog.debug.noalert # Match everything else not matched and don't alert
</match>

#### Parse out Cisco Style Sylog Messages
######## Cisco Commands Used to Create Log Entry:
######## logging host <ip> session-id hostname sequence-num-session
######## service sequence-numbers
<match {raw.cisco,raw.syslog}.**>
  @type parser
  key_name message
  remove_prefix raw # WILL REMOVE raw PREFIX WHETHER OR NOT IT MATCHES
  reserve_data yes
  format /^.+s_sn[ ]?="(?<message_id>\d+)" s_id.+"(?<device_name>.+):(?<device_port>\d+)"\]: \d+: (?<log_date>.*): %(?<msg_type>(\w|-)+): (?<message>.*)$/
  suppress_parse_error_log true
</match>

######## Cisco Commands Used to Create Log Entry:
######## logging host <ip> session-id hostname sequence-num-session
######## no service sequence-numbers
<match {raw.cisco,raw.syslog}.**>
  @type parser
  key_name message
  remove_prefix raw # WILL REMOVE raw PREFIX WHETHER OR NOT IT MATCHES
  reserve_data yes
  format /^.+s_sn[ ]?="(?<message_id>\d+)" s_id.+"(?<device_name>.+):(?<device_port>\d+)"\]: (?<log_date>.*): %(?<msg_type>(\w|-)+): (?<message>.*)$/
  suppress_parse_error_log true
</match>

#############################
##### ADDITONAL PARSING #####
#############################

# If Classified Port Security, Pull out Relevant Fields:
###### Port Security MAC Address
###### Port Security Switch Interface
<match cisco.crit.portsecurity>
        @type parser
        key_name message
        reserve_data yes
        format /^.*address (?<portsec_mac>\w+\.\w+\.\w+).+(port (?<portsec_interface>.+?)|(?<portsec_interface>VLAN .+?))\.?$/
        suppress_parse_error_log false
	tag syslog.crit.portsecurity.parsed
</match>

## Match TAC_PLUS @ http://www.shrubbery.net/tac_plus/
##
###### RSYSLOG TAC_PLUS Config File on TAC_PLUS Server###
# $ModLoad imfile
## Input Files
#$InputFileName <tac_plus accouting log file>
#$InputFileTag TAC_PLUS_ACCT:
#$InputFileStateFile /var/spool/rsyslog/tac_plus.state
#$InputFileSeverity info
#$InputFileFacility local3
#$InputRunFileMonitor
## TAC_PLUS Log to Syslog Server
#local3.*                        @<fluentd server>
########################################################

<match syslog.info.tacacs>
	@type parser
	key_name message
	reserve_data yes
	format /^.*\[.+\]:.*from (?<tacacs_device_hostname>.+) \[(?<tacacs_device_ip>.+)\]$/
	suppress_parse_error_log true
	tag tacacs.hostip.parsed # Modify tag so will go into ES as tacacs-<date>
</match>

# Parse Out TACACS ACCT Fields
<match tacacs.hostip.parsed>
        @type parser
        key_name message
        reserve_data yes
        format /^(?<syslog_datetime>.*) (?<syslog_hostname>.*) (?<syslog_type>.+): (?<tacacs_message_date>.+)\t(?<tacacs_device_host>.+)\t(?<tacacs_user>.*)\t(?<tacacs_line>.*)\t(?<tacacs_user_ip>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\t(?<tacacs_operation>.+?)\t(?<tacacs_remaining_message>.*)$/
        suppress_parse_error_log true
	tag tacacs.message.parsed
</match>

# Match TACACS remaining message field and split the ltsv pairs in the tacacs_remaining_message
<match tacacs.message.parsed>
	@type fields_autotype
	add_tag_prefix kvpairs # Becomes kvpairs.tacacs.message.parsed
	parse_key tacacs_remaining_message
	pattern (\S+)=([a-zA-Z0-9/ -]+)
</match>

<match kvpairs.tacacs.message.parsed>
  @type rewrite_tag_filter
  rewriterule1 message .+ ${tag_parts[0]}.${tag_parts[1]}.parsedfinal # becomes tacacs.message.parsedfinal
  remove_tag_prefix kvpairs # Becomes tacacs.message.parsedfinal
</match>

# Remove tacacs_remaining_message field after being parsed
<filter tacacs.message.parsedfinal>
	@type record_modifier
	remove_keys tacacs_remaining_message
</filter>

######################
##### OUTPUT #########
######################

<match {syslog,cisco,fluent,tacacs}.**>
  @type forest
  subtype copy
  <template>
    <store>
	@type elasticsearch
	hosts elasticsearch-master,elasticsearch-slave
        user elastic
        password changeme
	port 9200
	logstash_format true
	logstash_prefix ${tag_parts[0]}
	logstash_dateformat %Y.%m
	buffer_type memory
	flush_interval 60
	retry_limit 17
	retry_wait 1.0
	num_threads 3
	buffer_chunk_limit 256m
	buffer_queue_limit 128
	flatten_hashes true
	flatten_hashes_separator _
    </store>
    <store>
      @type file
      path /data_log/logs/${tag_parts[0]}
      time_slice_format %Y%m%d
      time_slice_wait 10m
      time_format %Y%m%dT%H%M%S%z
      compress gzip
      utc 
      buffer_path /data_log/logs/${tag}.*
    </store>
  </template>
</match>

<match **>
  @type file
  path /data_log/logs/unmatched-syslog
  time_slice_format %Y%m%d
  time_slice_wait 10m
  time_format %Y%m%dT%H%M%S%z
  compress gzip
  utc
  buffer_path /data_log/logs/unmatched-syslog.*
</match>

#### DEBUG TEST
#<match **>
#  @type file
#  path /data_log/logs/debug
#  time_slice_format %Y%m%d
#  time_slice_wait 10m
#  time_format %Y%m%dT%H%M%S%z
#  compress gzip
#  utc
#  buffer_path /data_log/logs/debug.*
#</match>
