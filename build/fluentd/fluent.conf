#### LAYOUT & NOTES #######################################################################
# For Parsed Documents: keep type and add parsed to end ex: syslog.info.<type>.parsed
# * matches a single tag part.
# ** matches zero or more tag parts.
# Fluentd tries to match tags in the order that they appear in the config file.
#
#
#
#
#
###########################################################################################



####################
###### SOURCES #####
####################

<source>
  @type syslog
  port 514
  bind 0.0.0.0
  tag syslog
  include_source_host true
  format none
</source>

<source>
  @type beats
  port 5044
  metadata_as_tag 
</source>

<source>
  type forward
  port 24224
  bind 0.0.0.0
</source>

#####################
##### MANIPULATE ####
#####################

#### Add Server Received Time to Records
<filter {syslog.**,*beat,docker.**}>
  @type record_transformer
  enable_ruby true
  <record>
    server_received ${Time.now}
  </record>
</filter>

#### Parse out Cisco Sylog Messages generated with the following commands: 
######## logging host <ip> session-id hostname sequence-num-session
######## service sequence-numbers
<filter syslog.**>
  @type parser
  key_name message
  reserve_data yes
  format /^.+s_sn="(?<message_id>\d+)" s_id="(?<device_name>.+):(?<device_port>\d+)"\]: \d+: (?<log_date>.*): %(?<msg_type>(\w|-)+): (?<message>.*)$/
  suppress_parse_error_log true
</filter>

######## logging host <ip> session-id hostname sequence-num-session
######## no service sequence-numbers
<filter syslog.**>
  @type parser
  key_name message
  reserve_data yes
  format /^.+s_sn="(?<message_id>\d+)" s_id.+"(?<device_name>.+):(?<device_port>\d+)"\]: (?<log_date>.*): %(?<msg_type>(\w|-)+): (?<message>.*)$/
  suppress_parse_error_log true
</filter>

######################################
### Match Syslog Severity & Types ####
### For Additional Processing ########
######################################

#### Emergency Syslog Severity 0
<match syslog.*.emerg.**>
  type rewrite_tag_filter
  rewriterule1 message .+ syslog.emerg.unmatched
</match>

#### Alert Syslog Severity 1
<match syslog.*.alert.**>
  type rewrite_tag_filter
  rewriterule1 message .+ syslog.alert.unmatched
</match>

#### Critical Syslog Severity 2
<match syslog.*.crit.**>
  type rewrite_tag_filter
  rewriterule1 message ^.*Security.*address.*0000\.0000\.0000.*$ cisco.crit.noalert
  rewriterule2 msg_type ^.*PORT_SECURITY-2-PSECURE_VIOLATION.*$ cisco.crit.portsecurity
  rewriterule3 message .+ syslog.crit.unmatched
</match>

#### Error Syslog Severity 3
<match syslog.*.err.**>
  type rewrite_tag_filter
  rewriterule1 msg_type ^.*%LINK-3-UPDOWN.*$ cisco.err.noalert
  rewriterule2 message .+ syslog.err.unmatched
</match>

#### Warn Syslog Severity 4
<match syslog.*.warn.**>
  type rewrite_tag_filter
  rewriterule1 message ^.*ARP.*0000\.0000\.0000.*$ cisco.warn.noalert
  rewriterule2 message .+ syslog.warn.unmatched
</match>

#### Notice Syslog Severity 5
<match syslog.*.notice.**>
  type rewrite_tag_filter
  rewriterule1 msg_type ^.*SYS-5-CONFIG_I.*$ cisco.notice.configchg
  rewriterule2 message ^.*EIGRP.*$ cisco.notice.eigrp
  rewriterule3 msg_type ^.*EIGRP.*$ cisco.notice.eigrp
  rewriterule4 msg_type ^.*SYS-5-RELOAD.*$ cisco.notice.reload
  rewriterule5 msg_type ^.*C4K_HWACLMAN-4.*$ cisco.notice.hwacl
  rewriterule6 msg_type ^.*EC-5-BUNDLE.*$ cisco.notice.portchannel
  rewriterule7 message .+ syslog.notice.noalert
</match>

#### Info Syslog Severity 6
<match syslog.*.info.**>
	type rewrite_tag_filter
	rewriterule1 message ^.*TAC_PLUS_ACCT:.*$ syslog.info.tacacs # Match TACACS Records
	rewriterule2 message ^.*POWERSUPPLY.*$ cisco.info.powersupply # Match Power Supply Records
	rewriterule3 msg_type ^.*EIGRP.*$ cisco.info.eigrp # EIGRP Messages
	rewriterule4 msg_type ^.*EM-6-LOG.*$ cisco.info.sla # SLA Errors
	rewriterule5 message .+ syslog.info.noalert # Match everything else not matched and don't alert
</match>

#### Debug Syslog Severity 6
<match syslog.*.debug.**>
	type rewrite_tag_filter
	rewriterule1 message .+ syslog.debug.noalert # Match everything else not matched and don't alert
</match>

######################
##### PARSE DATA #####
######################

# If portsecurity parse out relevant fields
<match cisco.crit.portsecurity>
        @type parser
        key_name message
        reserve_data yes
        format /^.*address (?<portsec_mac>\w+\.\w+\.\w+).+(port (?<portsec_interface>.+?)|(?<portsec_interface>VLAN .+?))\.?$/
        suppress_parse_error_log false
	tag syslog.crit.portsecurity.parsed
</match>

###### RSYSLOG TAC_PLUS ################################
# $ModLoad imfile
## Input Files
#$InputFileName /var/log/tac_plus/tac_plus_acct.log
#$InputFileTag TAC_PLUS_ACCT:
#$InputFileStateFile /var/spool/rsyslog/tac_plus.state
#$InputFileSeverity info
#$InputFileFacility local3
#$InputRunFileMonitor
## TAC_PLUS Log to Syslog Server
#local3.*                        @<server>
########################################################

<match syslog.info.tacacs>
        @type parser
        key_name message
        reserve_data yes
        format /^(?<syslog_datetime>.*) (?<syslog_hostname>.*) (?<syslog_type>.+): (?<tacacs_message_date>.+)\t(?<tacacs_device_host>.+)\t(?<tacacs_user>.*)\t(?<tacacs_line>.*)\t(?<tacacs_user_ip>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\t(?<tacacs_operation>.+?)\t(?<tacacs_remaining_message>.*)$/
        suppress_parse_error_log false
	tag syslog.info.tacacs.parsed1
</match>

# Match TACACS messages and split the ltsv pairs in the message
<match syslog.info.tacacs.parsed1>
        @type parser
        key_name tacacs_remaining_message
	format ltsv
	inject_key_prefix tacacs.
        tag syslog.info.tacacs.parsed2
        reserve_data no
</match>

######################
##### OUTPUT #########
######################

<match {syslog,cisco,docker,*beat,fluent}.**>
  @type forest
  subtype copy
  <template>
    <store>
      @type elasticsearch
      host elasticsearch
      port 9200
      logstash_format true
      logstash_prefix ${tag_parts[0]}
      flush_interval 10s
    </store>
    <store>
      @type file
      path /data_log/logs/${tag_parts[0]}
      time_slice_format %Y%m%d
      time_slice_wait 10m
      time_format %Y%m%dT%H%M%S%z
      compress gzip
      utc 
      buffer_path /data_log/logs/${tag}.*
    </store>
  </template>
</match>

<match **>
  @type file
  path /data_log/logs/unmatched
  time_slice_format %Y%m%d
  time_slice_wait 10m
  time_format %Y%m%dT%H%M%S%z
  compress gzip
  utc
  buffer_path /data_log/logs/unmatched.*
</match>
